@mixin reset-ul {
  margin: 0;
  padding: 0;
  list-style-type: none;
}

// Mixins for flexbox layout
@mixin flexbox {
  display: -ms-flex;
  display: -webkit-flex;
  display: flex;
}

@mixin flex-justify-content($value) {
  -ms-justify-content: $value;
  -moz-justify-content: $value;
  -webkit-justify-content: $value;
  justify-content: $value;
}

// ========

// Mixins for font
@mixin font-kerning() {
  -webkit-font-kerning: normal;
  -moz-font-kerning: normal;
  font-kerning: normal;
}

@mixin font-feature-settings() {
  -webkit-font-feature-settings: "liga";
  -moz-font-feature-settings: "liga", "kern";
  font-feature-settings: "liga", "kern";
}

@mixin font-smoothing() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin text-adjust() {
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}
// ========

@mixin calc($property, $expression) {
  #{$property}: -webkit-calc(#{$expression});
  #{$property}: calc(#{$expression});
}

@mixin transition($property, $time, $method) {
  -webkit-transition: $property $time $method;
  -moz-transition: $property $time $method;
  -ms-transition: $property $time $method;
  -o-transition: $property $time $method;
  transition: $property $time $method;
}

// Mixins for media queries
@mixin mq-min($width) {
  @media screen and (min-width: $width) {
    @content;
  }
}

@mixin mq-max($width) {
  @media screen and (max-width: $width) {
    @content;
  }
}

@mixin mq-min-max($min-width, $max-width) {
  @media screen and (min-width: $min-width) and (max-width: $max-width) {
    @content;
  }
}
// ========